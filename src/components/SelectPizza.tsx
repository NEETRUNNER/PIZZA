import Select from 'react-select';
import { useSearchParams } from 'react-router-dom';
import { useEffect } from 'react';
import { filterSlice } from '../redux/reducers/filterSlice';
import { useDispatch } from 'react-redux';
import { Selectors } from '../redux/selectors';

const SelectPizza: React.FC = () => {
    const [searchParams, setSearchParams] = useSearchParams();
    const {selectedOption} = Selectors();
    const {setOption} = filterSlice.actions;
    const dispatch = useDispatch();

    const updateFilters = (newFilters: { sort?: string }) => {
      searchParams.set("sort", (newFilters.sort as string));
      dispatch(setOption(searchParams.toString().slice(5, searchParams.toString().length)));
      setSearchParams(searchParams);
    };

    useEffect(() => {
      console.log(selectedOption)
      searchParams.delete("sort")
    }, [selectedOption])

    const customStyles = {
        control: (base: any, state: { isFocused: any; }) => ({
          ...base,
          backgroundColor: '#f9f9f9', // –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω
          borderColor: state.isFocused ? '#ff6f61' : '#d1d5db', // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ä–∞–º–∫–∏ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
          boxShadow: state.isFocused ? '0 0 0 2px rgba(255, 111, 97, 0.5)' : 'none',
          borderRadius: '8px',
          padding: '4px', // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø
          transition: 'all 0.3s ease',
        }),
        menu: (base: any) => ({
          ...base,
          borderRadius: '8px',
          backgroundColor: '#ffffff',
          boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)',
          zIndex: 10,
        }),
        option: (base: any, state: any) => ({
          ...base,
          backgroundColor: state.isSelected
            ? '#ff6f61'
            : state.isFocused
            ? '#ffe5e0'
            : '#ffffff',
          color: state.isSelected ? '#ffffff' : '#333333',
          padding: '12px 16px',
          cursor: 'pointer',
          transition: 'all 0.2s ease',
        }),
        singleValue: (base: any) => ({
          ...base,
          fontSize: '1rem',
          fontWeight: '600',
          color: '#333333',
        }),
        placeholder: (base: any) => ({
          ...base,
          fontSize: '1rem',
          fontWeight: '400',
          color: '#9ca3af',
        }),
    };
    
    const customTheme = (theme: any) => ({
        ...theme,
        colors: {
            ...theme.colors,
            primary: '#ff6f61', // –¶–≤–µ—Ç —Ä–∞–º–∫–∏ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
            primary25: '#ffe5e0', // –¶–≤–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            neutral0: '#f9f9f9', // –§–æ–Ω —Å–µ–ª–µ–∫—Ç–∞
        },
    });

    return (
        <Select
        isSearchable={false}
        className="md:w-72 xs:w-5/6 my-4 text-black md:text-md xs:text-xm font-nunito"
        defaultValue={{value: 'famous', label: '–ó–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—é'}}
        onChange={(e) => updateFilters({sort: e?.value})}
        options={[
          { value: 'all', label: '–£—Å—ñ –ø—ñ—Ü–∏' }, // üÜï –î–æ–±–∞–≤–∏–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç "–≤—Å–µ –ø–∏—Ü—Ü—ã"
          { value: 'exspensive', label: '–í—ñ–¥ –¥–æ—Ä–æ–≥–∏—Ö –¥–æ –¥–µ—à–µ–≤–∏—Ö' },
          { value: 'cheap', label: '–í—ñ–¥ –¥–µ—à–µ–≤–∏—Ö –¥–æ –¥–æ—Ä–æ–≥–∏—Ö' },
          { value: 'famous', label: '–ó–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—é' },
          { value: 'rating', label: '–ó–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º' },
        ]}
        styles={customStyles}
        theme={customTheme}
        placeholder="–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—å—Ç—Ä"
      />
    )
}

export default SelectPizza;